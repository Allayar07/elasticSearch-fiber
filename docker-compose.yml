version: "3.8"

services:
  postgres:
    image:  postgres:14.1-alpine
    container_name: postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password0701
      - POSTGRES_DB=practice
    ports:
      - '5475:5432/tcp'
    volumes:
      - postgres-storage:/var/lib/postgresql/data
  redis:
    image: redis:7.0-alpine
    container_name: elastic-cache
    ports:
      - "6390:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elastic-storage:/usr/share/elasticsearch/data

  zookeeper:
    container_name: zookeeper_local
    image: 'bitnami/zookeeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_local_data:/data

  kafka:
    container_name: kafka_local
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper_local:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
#  elastic_api:
#    build: .
#    container_name: elasticService
#    ports:
#      - '7575:7575'
volumes:
  postgres-storage:
  elastic-storage:
  zookeeper_local_data:
